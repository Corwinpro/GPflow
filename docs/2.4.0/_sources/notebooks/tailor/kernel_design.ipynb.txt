{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "b35617d2",
   "metadata": {},
   "source": [
    "# Kernel Design\n",
    "\n",
    "It's easy to make new kernels in GPflow. To demonstrate, we'll have a look at the Brownian motion kernel, whose function is\n",
    "\\begin{equation}\n",
    "k(x, x') = \\sigma^2 \\text{min}(x, x')\n",
    "\\end{equation}\n",
    "where $\\sigma^2$ is a variance parameter."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "282eab3a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-03-18T10:10:57.804278Z",
     "iopub.status.busy": "2022-03-18T10:10:57.803510Z",
     "iopub.status.idle": "2022-03-18T10:10:59.718750Z",
     "shell.execute_reply": "2022-03-18T10:10:59.718271Z"
    }
   },
   "outputs": [],
   "source": [
    "import gpflow\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import tensorflow as tf\n",
    "from gpflow.utilities import print_summary, positive\n",
    "\n",
    "plt.style.use(\"ggplot\")\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "662e6047",
   "metadata": {},
   "source": [
    "To make this new kernel class, we inherit from the base class `gpflow.kernels.Kernel` and implement the three functions below. **NOTE:** Depending on the kernel to be implemented, other classes can be more adequate. For example, if the kernel to be implemented is isotropic stationary, you can immediately subclass `gpflow.kernels.IsotropicStationary` (at which point you\n",
    "only have to override `K_r` or `K_r2`; see the `IsotropicStationary` class docstring). Stationary but anisotropic kernels should subclass `gpflow.kernels.AnisotropicStationary` and override `K_d`.\n",
    "\n",
    "#### `__init__`\n",
    "In this simple example, the constructor takes no argument (though it could, if that was convenient, for example to pass in an initial value for `variance`). It *must* call the constructor of the superclass with appropriate arguments. Brownian motion is only defined in one dimension, and we'll assume that the `active_dims` are `[0]`, for simplicity.\n",
    "\n",
    "We've added a parameter to the kernel using the `Parameter` class. Using this class lets the parameter be used in computing the kernel function, and it will automatically be recognised for optimization (or MCMC). Here, the variance parameter is initialized at 1, and constrained to be positive.\n",
    "\n",
    "#### `K`\n",
    "This is where you implement the kernel function itself. This takes two arguments, `X` and `X2`. By convention, we make the second argument optional (it defaults to `None`).\n",
    "\n",
    "Inside `K`, all the computation must be done with TensorFlow - here we've used `tf.minimum`. When GPflow executes the `K` function, `X` and `X2` will be TensorFlow tensors, and parameters such as `self.variance` behave like TensorFlow tensors as well.\n",
    "\n",
    "#### `K_diag`\n",
    "This convenience function allows GPflow to save memory at predict time. It's simply the diagonal of the `K` function, in the case where `X2` is `None`. It must return a one-dimensional vector, so we use TensorFlow's reshape command."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "758d6b80",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-03-18T10:10:59.720653Z",
     "iopub.status.busy": "2022-03-18T10:10:59.720546Z",
     "iopub.status.idle": "2022-03-18T10:10:59.768809Z",
     "shell.execute_reply": "2022-03-18T10:10:59.768416Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-03-18 10:10:59.751868: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:936] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n",
      "2022-03-18 10:10:59.755248: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcusolver.so.11'; dlerror: libcusolver.so.11: cannot open shared object file: No such file or directory\n",
      "2022-03-18 10:10:59.755745: W tensorflow/core/common_runtime/gpu/gpu_device.cc:1850] Cannot dlopen some GPU libraries. Please make sure the missing libraries mentioned above are installed properly if you would like to use GPU. Follow the guide at https://www.tensorflow.org/install/gpu for how to download and setup the required libraries for your platform.\n",
      "Skipping registering GPU devices...\n",
      "2022-03-18 10:10:59.756388: I tensorflow/core/platform/cpu_feature_guard.cc:151] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA\n",
      "To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead>\n",
       "<tr><th>name             </th><th>class    </th><th>transform  </th><th>prior  </th><th>trainable  </th><th>shape  </th><th>dtype  </th><th style=\"text-align: right;\">  value</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "<tr><td>Brownian.variance</td><td>Parameter</td><td>Softplus   </td><td>       </td><td>True       </td><td>()     </td><td>float64</td><td style=\"text-align: right;\">      1</td></tr>\n",
       "</tbody>\n",
       "</table>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "class Brownian(gpflow.kernels.Kernel):\n",
    "    def __init__(self):\n",
    "        super().__init__(active_dims=[0])\n",
    "        self.variance = gpflow.Parameter(1.0, transform=positive())\n",
    "\n",
    "    def K(self, X, X2=None):\n",
    "        if X2 is None:\n",
    "            X2 = X\n",
    "        return self.variance * tf.minimum(X, tf.transpose(X2))  # this returns a 2D tensor\n",
    "\n",
    "    def K_diag(self, X):\n",
    "        return self.variance * tf.reshape(X, (-1,))  # this returns a 1D tensor\n",
    "\n",
    "\n",
    "k_brownian = Brownian()\n",
    "print_summary(k_brownian, fmt=\"notebook\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a4152794",
   "metadata": {},
   "source": [
    "We can now evaluate our new kernel function and draw samples from a Gaussian process with this covariance:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "14a3e29e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-03-18T10:10:59.770380Z",
     "iopub.status.busy": "2022-03-18T10:10:59.770275Z",
     "iopub.status.idle": "2022-03-18T10:11:00.001891Z",
     "shell.execute_reply": "2022-03-18T10:11:00.001443Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "np.random.seed(23)  # for reproducibility\n",
    "\n",
    "\n",
    "def plotkernelsample(k, ax, xmin=0, xmax=3):\n",
    "    xx = np.linspace(xmin, xmax, 300)[:, None]\n",
    "    K = k(xx)\n",
    "    ax.plot(xx, np.random.multivariate_normal(np.zeros(300), K, 5).T)\n",
    "    ax.set_title(\"Samples \" + k.__class__.__name__)\n",
    "\n",
    "\n",
    "def plotkernelfunction(k, ax, xmin=0, xmax=3, other=0):\n",
    "    xx = np.linspace(xmin, xmax, 100)[:, None]\n",
    "    ax.plot(xx, k(xx, np.zeros((1, 1)) + other))\n",
    "    ax.set_title(k.__class__.__name__ + \" k(x, %.1f)\" % other)\n",
    "\n",
    "\n",
    "f, axes = plt.subplots(1, 2, figsize=(12, 4), sharex=True)\n",
    "plotkernelfunction(k_brownian, axes[0], other=2.0)\n",
    "plotkernelsample(k_brownian, axes[1])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "434a2637",
   "metadata": {},
   "source": [
    "## Using the kernel in a model\n",
    "\n",
    "Because we've inherited from the `Kernel` base class, this new kernel has all the properties needed to be used in GPflow. It also has some convenience features such as allowing the user to call\n",
    "\n",
    "`k(X, X2)`\n",
    "\n",
    "which computes the kernel matrix.\n",
    "\n",
    "To show that this kernel works, let's use it inside GP regression. We'll see that Brownian motion has quite interesting properties. To add a little flexibility, we'll add a `Constant` kernel to our `Brownian` kernel, and the `GPR` class will handle the noise."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ae13ae5c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-03-18T10:11:00.004122Z",
     "iopub.status.busy": "2022-03-18T10:11:00.003844Z",
     "iopub.status.idle": "2022-03-18T10:11:01.127033Z",
     "shell.execute_reply": "2022-03-18T10:11:01.126544Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-03-18 10:11:00.092435: W tensorflow/python/util/util.cc:368] Sets are not currently considered sequences, but this may change in the future, so consider avoiding using them.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead>\n",
       "<tr><th>name                          </th><th>class    </th><th>transform       </th><th>prior  </th><th>trainable  </th><th>shape  </th><th>dtype  </th><th style=\"text-align: right;\">      value</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "<tr><td>GPR.kernel.kernels[0].variance</td><td>Parameter</td><td>Softplus        </td><td>       </td><td>True       </td><td>()     </td><td>float64</td><td style=\"text-align: right;\">2.33113    </td></tr>\n",
       "<tr><td>GPR.kernel.kernels[1].variance</td><td>Parameter</td><td>Softplus        </td><td>       </td><td>True       </td><td>()     </td><td>float64</td><td style=\"text-align: right;\">0.283867   </td></tr>\n",
       "<tr><td>GPR.likelihood.variance       </td><td>Parameter</td><td>Softplus + Shift</td><td>       </td><td>True       </td><td>()     </td><td>float64</td><td style=\"text-align: right;\">1.06518e-06</td></tr>\n",
       "</tbody>\n",
       "</table>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "np.random.seed(42)\n",
    "X = np.random.rand(5, 1)\n",
    "Y = np.sin(X * 6) + np.random.randn(*X.shape) * 0.001\n",
    "\n",
    "k1 = Brownian()\n",
    "k2 = gpflow.kernels.Constant()\n",
    "k = k1 + k2\n",
    "\n",
    "m = gpflow.models.GPR((X, Y), kernel=k)\n",
    "# m.likelihood.variance.assign(1e-6)\n",
    "\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(m.training_loss, variables=m.trainable_variables)\n",
    "print_summary(m, fmt=\"notebook\")\n",
    "\n",
    "xx = np.linspace(0, 1.1, 100).reshape(100, 1)\n",
    "mean, var = m.predict_y(xx)\n",
    "plt.plot(X, Y, \"kx\", mew=2)\n",
    "(line,) = plt.plot(xx, mean, lw=2)\n",
    "_ = plt.fill_between(\n",
    "    xx[:, 0],\n",
    "    mean[:, 0] - 2 * np.sqrt(var[:, 0]),\n",
    "    mean[:, 0] + 2 * np.sqrt(var[:, 0]),\n",
    "    color=line.get_color(),\n",
    "    alpha=0.2,\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c5d4f29c",
   "metadata": {},
   "source": [
    "## See also\n",
    "\n",
    "For more details on how to manipulate existing kernels (or the one you just created!), we refer to the [Manipulating kernels](../advanced/kernels.ipynb) notebook."
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,.pct.py:percent"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
