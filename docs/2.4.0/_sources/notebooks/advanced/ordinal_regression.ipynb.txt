{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "7893bc3c",
   "metadata": {},
   "source": [
    "Ordinal regression\n",
    "--\n",
    "Ordinal regression aims to fit a model to some data $(X, Y)$, where $Y$ is an ordinal variable. To do so, we use a `VPG` model with a specific likelihood (`gpflow.likelihoods.Ordinal`)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "88f263ff",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-03-18T10:06:47.300108Z",
     "iopub.status.busy": "2022-03-18T10:06:47.299476Z",
     "iopub.status.idle": "2022-03-18T10:06:49.250282Z",
     "shell.execute_reply": "2022-03-18T10:06:49.249854Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "import gpflow\n",
    "\n",
    "import tensorflow as tf\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "%matplotlib inline\n",
    "plt.rcParams[\"figure.figsize\"] = (12, 6)\n",
    "\n",
    "np.random.seed(123)  # for reproducibility"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "65ad3010",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-03-18T10:06:49.252234Z",
     "iopub.status.busy": "2022-03-18T10:06:49.252126Z",
     "iopub.status.idle": "2022-03-18T10:06:49.434620Z",
     "shell.execute_reply": "2022-03-18T10:06:49.434094Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-03-18 10:06:49.283950: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:936] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n",
      "2022-03-18 10:06:49.287347: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcusolver.so.11'; dlerror: libcusolver.so.11: cannot open shared object file: No such file or directory\n",
      "2022-03-18 10:06:49.287857: W tensorflow/core/common_runtime/gpu/gpu_device.cc:1850] Cannot dlopen some GPU libraries. Please make sure the missing libraries mentioned above are installed properly if you would like to use GPU. Follow the guide at https://www.tensorflow.org/install/gpu for how to download and setup the required libraries for your platform.\n",
      "Skipping registering GPU devices...\n",
      "2022-03-18 10:06:49.288614: I tensorflow/core/platform/cpu_feature_guard.cc:151] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA\n",
      "To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'observed data value')"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 792x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# make a one-dimensional ordinal regression problem\n",
    "\n",
    "# This function generates a set of inputs X,\n",
    "# quantitative output f (latent) and ordinal values Y\n",
    "\n",
    "\n",
    "def generate_data(num_data):\n",
    "    # First generate random inputs\n",
    "    X = np.random.rand(num_data, 1)\n",
    "\n",
    "    # Now generate values of a latent GP\n",
    "    kern = gpflow.kernels.SquaredExponential(lengthscales=0.1)\n",
    "    K = kern(X)\n",
    "    f = np.random.multivariate_normal(mean=np.zeros(num_data), cov=K).reshape(-1, 1)\n",
    "\n",
    "    # Finally convert f values into ordinal values Y\n",
    "    Y = np.round((f + f.min()) * 3)\n",
    "    Y = Y - Y.min()\n",
    "    Y = np.asarray(Y, np.float64)\n",
    "\n",
    "    return X, f, Y\n",
    "\n",
    "\n",
    "np.random.seed(1)\n",
    "num_data = 20\n",
    "X, f, Y = generate_data(num_data)\n",
    "\n",
    "plt.figure(figsize=(11, 6))\n",
    "plt.plot(X, f, \".\")\n",
    "plt.ylabel(\"latent function value\")\n",
    "\n",
    "plt.twinx()\n",
    "plt.plot(X, Y, \"kx\", mew=1.5)\n",
    "plt.ylabel(\"observed data value\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "3db7336d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-03-18T10:06:49.436412Z",
     "iopub.status.busy": "2022-03-18T10:06:49.436262Z",
     "iopub.status.idle": "2022-03-18T10:06:51.603222Z",
     "shell.execute_reply": "2022-03-18T10:06:51.602910Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-03-18 10:06:49.456941: W tensorflow/python/util/util.cc:368] Sets are not currently considered sequences, but this may change in the future, so consider avoiding using them.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "      fun: 25.487470477487047\n",
       " hess_inv: <233x233 LbfgsInvHessProduct with dtype=float64>\n",
       "      jac: array([-6.65482792e-02, -2.28011094e-02, -4.10331104e-02, -4.42627418e-02,\n",
       "       -6.76994496e-02, -2.98011020e-02, -6.97511637e-02, -4.67811016e-04,\n",
       "       -1.28365467e-02,  2.16799746e-02,  5.08941935e-03,  1.45547171e-02,\n",
       "        6.88426919e-03, -2.41224436e-02, -9.48170239e-03, -2.19859908e-02,\n",
       "       -2.05467585e-04, -1.22032380e-02, -2.20537165e-02, -1.67117284e-03,\n",
       "        2.77558580e-04, -4.07676425e-04, -5.72485098e-09,  2.48512752e-06,\n",
       "       -1.87613440e-09, -7.61132102e-06,  1.94440349e-11, -6.40226130e-03,\n",
       "        1.98085263e-08,  2.41774976e-06, -2.43871182e-07, -2.07220555e-05,\n",
       "        1.54185927e-04, -3.35571882e-03,  2.68769104e-04,  4.67488855e-05,\n",
       "        1.87349895e-04, -1.87075004e-04, -1.52141097e-04,  3.49573448e-04,\n",
       "       -2.59341003e-02,  7.38025918e-03, -3.48153857e-09,  1.01544739e-06,\n",
       "       -2.16878450e-10,  4.48229323e-04,  1.26772760e-11, -1.31505057e-03,\n",
       "        1.42452956e-08,  1.72877352e-07, -4.68453744e-07, -1.70397529e-05,\n",
       "        9.67499997e-05,  2.67820614e-03, -1.21331960e-03, -1.31539205e-02,\n",
       "        1.63548390e-03, -1.34677623e-03, -4.01958872e-04, -8.42956290e-04,\n",
       "        1.30852862e-02,  3.10825813e-02, -1.37891848e-02, -5.81727766e-04,\n",
       "       -5.26061617e-03, -2.84808995e-09, -1.51826941e-04, -6.49921089e-07,\n",
       "       -8.71770858e-03,  4.66246333e-03, -2.30823654e-02, -8.98120884e-04,\n",
       "       -7.03403632e-04, -5.79634199e-05, -4.16271734e-04,  6.33038296e-05,\n",
       "       -7.47499160e-03, -3.56795892e-04,  2.50168079e-03,  3.24804117e-03,\n",
       "       -2.16233481e-02, -1.00909264e-02, -6.66105808e-02, -1.95515266e-05,\n",
       "       -8.15485894e-05, -2.65275252e-08, -2.20500837e-06,  3.82557557e-06,\n",
       "       -1.25829646e-04,  7.31918817e-05, -3.69209769e-04, -1.79144839e-05,\n",
       "       -1.29683386e-05,  1.74288971e-06, -6.48552173e-06,  1.63472619e-06,\n",
       "       -1.16533766e-04, -5.29125623e-06,  4.07042889e-05, -1.78211942e-05,\n",
       "        3.77690070e-03, -2.38226907e-02, -3.23549979e-02,  1.59620787e-02,\n",
       "        2.43412582e-02, -1.65233061e-09,  4.12675097e-05, -3.23306484e-07,\n",
       "        1.79293668e-02,  8.80523692e-04, -5.92348433e-03, -6.05228126e-04,\n",
       "       -4.29061540e-03, -2.70107404e-05,  6.33272833e-04,  3.53920300e-04,\n",
       "       -4.95085938e-03,  8.70060777e-04, -4.18799383e-03, -8.09859157e-06,\n",
       "       -2.67041191e-02, -3.05997587e-02, -5.91385078e-02,  5.05747012e-02,\n",
       "       -1.71623151e-02, -1.32902931e-03,  7.45973108e-11,  8.92101065e-05,\n",
       "       -2.86595758e-08, -2.63708394e-06,  1.28404794e-06, -3.43501114e-06,\n",
       "        2.12480794e-04, -1.21357176e-03,  3.46221253e-04,  7.34346924e-03,\n",
       "       -3.13980980e-03, -1.21033260e-02,  2.05415073e-04, -4.64325996e-04,\n",
       "       -2.25410284e-02, -1.01492933e-03,  5.84196436e-03, -8.31480497e-03,\n",
       "        1.51740827e-02,  1.24359456e-02, -4.63549998e-03,  9.49243555e-09,\n",
       "        1.48145850e-02, -7.98858002e-05,  3.50859581e-03,  8.56290952e-04,\n",
       "       -3.97727785e-03,  7.05717959e-04,  1.40914591e-03,  1.11314470e-04,\n",
       "        1.03747031e-02, -1.03133396e-03,  5.89783703e-03,  6.12019068e-03,\n",
       "        1.31142733e-02, -6.94945065e-03, -8.77972016e-03,  3.47435536e-03,\n",
       "       -1.32934317e-02,  7.23586436e-03, -2.55926494e-02,  1.14888923e-02,\n",
       "        4.14225296e-07, -9.61651344e-05, -7.13228787e-06, -8.85671255e-04,\n",
       "        3.20724486e-03, -1.14173652e-02,  4.38266654e-03,  1.30171502e-03,\n",
       "        1.27924069e-03, -1.19806804e-03, -1.73452399e-03,  3.55347773e-03,\n",
       "        6.82831128e-03, -1.08854421e-04,  3.09663294e-04, -1.50953628e-02,\n",
       "       -4.94313579e-03,  7.44792614e-05,  5.97823614e-03,  7.36015811e-03,\n",
       "       -8.48815128e-03, -5.85041430e-04,  5.19347404e-03, -2.70607876e-03,\n",
       "       -2.18095111e-02,  3.16616151e-06,  3.82129358e-03,  1.86778718e-03,\n",
       "       -2.04992385e-02,  5.59729280e-03,  1.25365618e-02, -3.92868360e-03,\n",
       "        9.77589097e-04,  5.74138277e-04,  4.45949676e-04,  1.26726598e-02,\n",
       "       -3.52411611e-04,  7.33145240e-04, -3.43104390e-04,  2.79855493e-03,\n",
       "        1.18075865e-02, -8.33277793e-04,  8.20941777e-04,  1.62535752e-04,\n",
       "        8.15731699e-04,  4.18787011e-05, -8.13929159e-05, -6.60589823e-05,\n",
       "        1.62099712e-03, -1.60702687e-04, -7.80567068e-04, -2.65167430e-03,\n",
       "        6.97977738e-03,  3.00029809e-03, -6.50974064e-04, -6.91986612e-02,\n",
       "        1.45574820e-03, -2.02419559e-03,  3.70928132e-03, -6.58496841e-03,\n",
       "       -7.01642799e-03, -3.52647198e-05,  1.25209562e-01, -8.32970706e-03,\n",
       "       -1.00396882e-02])\n",
       "  message: 'STOP: TOTAL NO. of ITERATIONS REACHED LIMIT'\n",
       "     nfev: 116\n",
       "      nit: 100\n",
       "     njev: 116\n",
       "   status: 1\n",
       "  success: False\n",
       "        x: array([-1.99973507e+00, -2.36106014e-01, -8.88950231e-04,  7.62047389e-01,\n",
       "       -1.98110852e-01, -1.59229729e+00,  7.93681577e-01, -3.86889635e-01,\n",
       "       -1.13949872e-01,  3.78716109e-01, -8.98007865e-02,  3.46381679e-01,\n",
       "       -7.61846764e-02,  1.59570909e+00, -2.61505459e-01,  8.54327746e-01,\n",
       "        6.56880248e-03,  4.46001417e-01, -3.20365109e-01,  6.90522685e-04,\n",
       "        9.88817853e-01, -2.80824927e-03,  6.18784910e-08,  1.28533951e-05,\n",
       "        1.00558904e-08,  1.33405300e-04,  5.89551639e-11, -6.28875301e-02,\n",
       "        7.68178603e-09, -1.38969408e-04, -1.17838966e-05, -7.71515631e-04,\n",
       "        2.21555882e-03, -6.31938620e-02,  1.79725561e-03, -3.69556992e-03,\n",
       "       -2.79571210e-03,  1.02877805e-05,  4.53908217e-06,  3.23323905e-05,\n",
       "        2.24967549e-01,  9.45886629e-01,  3.60354837e-08,  6.94167470e-06,\n",
       "        6.70474894e-09,  8.43115306e-03,  3.48936608e-11, -2.24840100e-02,\n",
       "        7.58195183e-09, -4.44197992e-05, -4.05352864e-06, -2.51109800e-04,\n",
       "        7.33512760e-04,  2.99273658e-02, -3.30685715e-02, -2.28129531e-01,\n",
       "        1.38893404e-03, -7.87974067e-04,  1.12013359e-05, -9.02922037e-06,\n",
       "       -1.92226109e-02,  1.41991779e-01,  6.14727350e-01, -9.80894462e-03,\n",
       "       -1.31907731e-01, -4.48108569e-08, -6.29714658e-04, -1.33375023e-05,\n",
       "        1.21348315e-02,  7.00032255e-02, -3.90308924e-01, -3.17501863e-02,\n",
       "       -8.18888591e-03, -2.86406174e-04, -3.04797075e-05, -1.67377067e-07,\n",
       "        1.74985874e-03, -5.42130485e-05,  2.23708887e-02,  4.28758482e-02,\n",
       "       -5.42741033e-03,  3.53010317e-04,  1.37478718e-01,  9.99917312e-01,\n",
       "       -2.04363826e-03, -4.50334169e-07, -9.60871806e-06,  3.04958051e-05,\n",
       "        1.97229939e-04,  1.07912582e-03, -6.05900275e-03, -4.88684129e-04,\n",
       "       -1.28209179e-04,  2.44421575e-05,  2.21559925e-07,  1.20153934e-05,\n",
       "        2.74078342e-05, -7.17980902e-07,  3.48428003e-04, -1.75272621e-04,\n",
       "       -1.52910078e-01,  3.75832737e-03, -1.23789086e-02,  1.69803943e-01,\n",
       "        7.18771052e-01, -1.66881797e-08, -4.40753813e-03, -4.47482648e-06,\n",
       "       -4.24396739e-01,  2.30615263e-02, -8.94045201e-02, -1.37519921e-02,\n",
       "       -3.75861609e-03, -9.54115638e-05,  3.86714161e-05,  2.32820141e-05,\n",
       "        7.92635445e-04,  3.85342568e-05,  4.30465894e-02,  1.76200960e-02,\n",
       "        3.15223900e-02, -7.24675583e-04, -6.33868195e-02, -7.06778710e-02,\n",
       "        1.09864108e-01,  5.73035709e-01, -2.04467126e-10,  1.13192405e-02,\n",
       "       -1.83498169e-08,  2.11808827e-05,  2.17018938e-06,  1.15327185e-04,\n",
       "       -2.48794531e-04, -2.39822377e-02, -1.74611803e-01,  4.90762416e-02,\n",
       "       -4.37778536e-04, -3.00788756e-01, -9.22197262e-05,  2.30068757e-04,\n",
       "       -1.29006345e-02, -1.19659731e-04, -1.25980727e-01,  3.06796476e-02,\n",
       "       -1.41215997e-01,  3.20209507e-01,  1.62203867e-01, -2.34521968e-07,\n",
       "        5.21908550e-02,  1.25365593e-03, -2.20292382e-03, -9.54802411e-04,\n",
       "       -5.62928321e-04,  1.88365869e-05,  8.06665318e-05,  2.19577195e-05,\n",
       "        1.89869022e-04,  2.91274858e-05, -1.13133935e-01,  8.99645495e-04,\n",
       "        3.53489867e-02, -7.31890260e-04, -2.02204063e-02, -9.81245241e-02,\n",
       "       -2.11319512e-01,  1.18283561e-01,  3.07491970e-01,  6.84416177e-01,\n",
       "       -2.34986078e-06, -2.49204055e-03, -2.14507967e-04, -1.36727050e-02,\n",
       "        3.84321071e-02, -4.85660167e-01,  6.70934600e-03, -3.72243739e-02,\n",
       "       -6.34279486e-02,  7.17549017e-03, -3.42841616e-05,  3.32851329e-04,\n",
       "       -2.12537167e-01,  4.21399542e-03, -9.05005700e-04, -2.67076624e-01,\n",
       "       -9.12473222e-03,  1.82205014e-03,  5.99705061e-02,  4.20819043e-01,\n",
       "        2.69432099e-01,  3.30855855e-02, -6.13277164e-02, -2.50656269e-02,\n",
       "       -7.41799897e-03, -4.92839843e-05,  2.49770763e-04,  1.13665433e-04,\n",
       "        9.36287131e-04,  3.12953803e-04, -2.73073300e-01,  2.97713887e-02,\n",
       "       -8.59037069e-02,  5.73175826e-03,  3.08365434e-04,  8.21119838e-03,\n",
       "       -6.95164931e-04,  2.05160640e-04, -1.22903045e-02, -5.97397972e-02,\n",
       "        9.07757568e-01,  9.94613822e-01,  4.55107671e-02,  5.61538627e-03,\n",
       "        1.55954925e-03, -2.06785274e-03,  2.30053720e-05, -1.28025065e-04,\n",
       "       -5.98762243e-04,  3.59160814e-05,  5.40212362e-03, -2.59290903e-02,\n",
       "       -2.08566145e-01, -4.35796479e-02, -2.78265262e-05, -1.18714097e-02,\n",
       "       -1.90978292e-04, -4.28969217e-05, -2.18251400e-04,  5.09965450e-02,\n",
       "        2.04370047e-01,  1.67917646e-01, -1.97907241e+00,  5.46706876e+00,\n",
       "       -1.44968285e+00])"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# construct ordinal likelihood - bin_edges is the same as unique(Y) but centered\n",
    "bin_edges = np.array(np.arange(np.unique(Y).size + 1), dtype=float)\n",
    "bin_edges = bin_edges - bin_edges.mean()\n",
    "likelihood = gpflow.likelihoods.Ordinal(bin_edges)\n",
    "\n",
    "# build a model with this likelihood\n",
    "m = gpflow.models.VGP(data=(X, Y), kernel=gpflow.kernels.Matern32(), likelihood=likelihood)\n",
    "\n",
    "# fit the model\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(m.training_loss, m.trainable_variables, options=dict(maxiter=100))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ffdc53aa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-03-18T10:06:51.604893Z",
     "iopub.status.busy": "2022-03-18T10:06:51.604762Z",
     "iopub.status.idle": "2022-03-18T10:06:51.708595Z",
     "shell.execute_reply": "2022-03-18T10:06:51.708263Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7f8170469090>]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 792x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# here we'll plot the expected value of Y +- 2 std deviations, as if the distribution were Gaussian\n",
    "plt.figure(figsize=(11, 6))\n",
    "X_data, Y_data = (m.data[0].numpy(), m.data[1].numpy())\n",
    "Xtest = np.linspace(X_data.min(), X_data.max(), 100).reshape(-1, 1)\n",
    "mu, var = m.predict_y(Xtest)\n",
    "(line,) = plt.plot(Xtest, mu, lw=2)\n",
    "col = line.get_color()\n",
    "plt.plot(Xtest, mu + 2 * np.sqrt(var), \"--\", lw=2, color=col)\n",
    "plt.plot(Xtest, mu - 2 * np.sqrt(var), \"--\", lw=2, color=col)\n",
    "plt.plot(X_data, Y_data, \"kx\", mew=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "9e24a214",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-03-18T10:06:51.712366Z",
     "iopub.status.busy": "2022-03-18T10:06:51.712047Z",
     "iopub.status.idle": "2022-03-18T10:06:51.715288Z",
     "shell.execute_reply": "2022-03-18T10:06:51.714920Z"
    }
   },
   "outputs": [],
   "source": [
    "## to see the predictive density, try predicting every possible discrete value for Y.\n",
    "def pred_log_density(m):\n",
    "    Xtest = np.linspace(X_data.min(), X_data.max(), 100).reshape(-1, 1)\n",
    "    ys = np.arange(Y_data.max() + 1)\n",
    "    densities = []\n",
    "    for y in ys:\n",
    "        Ytest = np.full_like(Xtest, y)\n",
    "        # Predict the log density\n",
    "        densities.append(m.predict_log_density((Xtest, Ytest)))\n",
    "    return np.vstack(densities)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d3eb9f84",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-03-18T10:06:51.716844Z",
     "iopub.status.busy": "2022-03-18T10:06:51.716685Z",
     "iopub.status.idle": "2022-03-18T10:06:51.977668Z",
     "shell.execute_reply": "2022-03-18T10:06:51.977292Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7f8170346aa0>]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1008x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize=(14, 6))\n",
    "plt.imshow(\n",
    "    np.exp(pred_log_density(m)),\n",
    "    interpolation=\"nearest\",\n",
    "    extent=[X_data.min(), X_data.max(), -0.5, Y_data.max() + 0.5],\n",
    "    origin=\"lower\",\n",
    "    aspect=\"auto\",\n",
    "    cmap=plt.cm.viridis,\n",
    ")\n",
    "plt.colorbar()\n",
    "plt.plot(X, Y, \"kx\", mew=2, scalex=False, scaley=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "fdd2aceb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-03-18T10:06:51.979333Z",
     "iopub.status.busy": "2022-03-18T10:06:51.979222Z",
     "iopub.status.idle": "2022-03-18T10:06:52.071247Z",
     "shell.execute_reply": "2022-03-18T10:06:52.070809Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<BarContainer object of 8 artists>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 576x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Predictive density for a single input x=0.5\n",
    "x_new = 0.5\n",
    "Y_new = np.arange(np.max(Y_data + 1)).reshape([-1, 1])\n",
    "X_new = np.full_like(Y_new, x_new)\n",
    "# for predict_log_density x and y need to have the same number of rows\n",
    "dens_new = np.exp(m.predict_log_density((X_new, Y_new)))\n",
    "fig = plt.figure(figsize=(8, 4))\n",
    "plt.bar(x=Y_new.flatten(), height=dens_new.flatten())"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,.pct.py:percent"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
