{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "dd5a333a",
   "metadata": {},
   "source": [
    "# Convolutional Gaussian Processes\n",
    "Mark van der Wilk (July 2019)\n",
    "\n",
    "Here we show a simple example of the rectangles experiment, where we compare a normal squared exponential GP, and a convolutional GP. This is similar to the experiment in [1].\n",
    "\n",
    "[1] Van der Wilk, Rasmussen, Hensman (2017). Convolutional Gaussian Processes. *Advances in Neural Information Processing Systems 30*."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1ac6dc09",
   "metadata": {},
   "source": [
    "## Generate dataset\n",
    "Generate a simple dataset of rectangles. We want to classify whether they are tall or wide. **NOTE:** Here we take care to make sure that the rectangles don't touch the edge, which is different to the original paper. We do this to avoid needing to use patch weights, which are needed to correctly account for edge effects."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ca2015f2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-07T08:42:34.634077Z",
     "iopub.status.busy": "2022-06-07T08:42:34.633755Z",
     "iopub.status.idle": "2022-06-07T08:42:38.487613Z",
     "shell.execute_reply": "2022-06-07T08:42:38.486891Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-06-07 08:42:35.844008: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory\n",
      "2022-06-07 08:42:35.844054: I tensorflow/stream_executor/cuda/cudart_stub.cc:29] Ignore above cudart dlerror if you do not have a GPU set up on your machine.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/circleci/project/gpflow/experimental/utils.py:42: UserWarning: You're calling gpflow.experimental.check_shapes.decorator.check_shapes which is considered *experimental*. Expect: breaking changes, poor documentation, and bugs.\n",
      "  warn(\n"
     ]
    }
   ],
   "source": [
    "import time\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import gpflow\n",
    "import tensorflow as tf\n",
    "import tensorflow_probability as tfp\n",
    "\n",
    "from gpflow import set_trainable\n",
    "from gpflow.ci_utils import is_continuous_integration\n",
    "\n",
    "gpflow.config.set_default_float(np.float64)\n",
    "gpflow.config.set_default_jitter(1e-4)\n",
    "gpflow.config.set_default_summary_fmt(\"notebook\")\n",
    "\n",
    "# for reproducibility of this notebook:\n",
    "np.random.seed(123)\n",
    "tf.random.set_seed(42)\n",
    "\n",
    "MAXITER = 2 if is_continuous_integration() else 100\n",
    "NUM_TRAIN_DATA = (\n",
    "    5 if is_continuous_integration() else 100\n",
    ")  # This is less than in the original rectangles dataset\n",
    "NUM_TEST_DATA = 7 if is_continuous_integration() else 300\n",
    "H = W = 14  # width and height. In the original paper this is 28\n",
    "IMAGE_SHAPE = [H, W]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "fbe946f4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-07T08:42:38.491779Z",
     "iopub.status.busy": "2022-06-07T08:42:38.491135Z",
     "iopub.status.idle": "2022-06-07T08:42:38.501250Z",
     "shell.execute_reply": "2022-06-07T08:42:38.500370Z"
    }
   },
   "outputs": [],
   "source": [
    "def affine_scalar_bijector(shift=None, scale=None):\n",
    "    scale_bijector = tfp.bijectors.Scale(scale) if scale else tfp.bijectors.Identity()\n",
    "    shift_bijector = tfp.bijectors.Shift(shift) if shift else tfp.bijectors.Identity()\n",
    "    return shift_bijector(scale_bijector)\n",
    "\n",
    "\n",
    "def make_rectangle(arr, x0, y0, x1, y1):\n",
    "    arr[y0:y1, x0] = 1\n",
    "    arr[y0:y1, x1] = 1\n",
    "    arr[y0, x0:x1] = 1\n",
    "    arr[y1, x0 : x1 + 1] = 1\n",
    "\n",
    "\n",
    "def make_random_rectangle(arr):\n",
    "    x0 = np.random.randint(1, arr.shape[1] - 3)\n",
    "    y0 = np.random.randint(1, arr.shape[0] - 3)\n",
    "    x1 = np.random.randint(x0 + 2, arr.shape[1] - 1)\n",
    "    y1 = np.random.randint(y0 + 2, arr.shape[0] - 1)\n",
    "    make_rectangle(arr, x0, y0, x1, y1)\n",
    "    return x0, y0, x1, y1\n",
    "\n",
    "\n",
    "def make_rectangles_dataset(num, w, h):\n",
    "    d, Y = np.zeros((num, h, w)), np.zeros((num, 1))\n",
    "    for i, img in enumerate(d):\n",
    "        for j in range(1000):  # Finite number of tries\n",
    "            x0, y0, x1, y1 = make_random_rectangle(img)\n",
    "            rw, rh = y1 - y0, x1 - x0\n",
    "            if rw == rh:\n",
    "                img[:, :] = 0\n",
    "                continue\n",
    "            Y[i, 0] = rw > rh\n",
    "            break\n",
    "    return (\n",
    "        d.reshape(num, w * h).astype(gpflow.config.default_float()),\n",
    "        Y.astype(gpflow.config.default_float()),\n",
    "    )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "d5e999b9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-07T08:42:38.504042Z",
     "iopub.status.busy": "2022-06-07T08:42:38.503712Z",
     "iopub.status.idle": "2022-06-07T08:42:38.525573Z",
     "shell.execute_reply": "2022-06-07T08:42:38.524141Z"
    }
   },
   "outputs": [],
   "source": [
    "X, Y = data = make_rectangles_dataset(NUM_TRAIN_DATA, *IMAGE_SHAPE)\n",
    "Xt, Yt = test_data = make_rectangles_dataset(NUM_TEST_DATA, *IMAGE_SHAPE)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "bbd7d0a8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-07T08:42:38.530734Z",
     "iopub.status.busy": "2022-06-07T08:42:38.529836Z",
     "iopub.status.idle": "2022-06-07T08:42:38.875129Z",
     "shell.execute_reply": "2022-06-07T08:42:38.874268Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 576x216 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 3))\n",
    "for i in range(4):\n",
    "    plt.subplot(1, 4, i + 1)\n",
    "    plt.imshow(X[i, :].reshape(*IMAGE_SHAPE))\n",
    "    plt.title(Y[i, 0])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "73675876",
   "metadata": {},
   "source": [
    "## Squared Exponential kernel"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "30d11bf7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-07T08:42:38.878032Z",
     "iopub.status.busy": "2022-06-07T08:42:38.877692Z",
     "iopub.status.idle": "2022-06-07T08:42:38.924894Z",
     "shell.execute_reply": "2022-06-07T08:42:38.923580Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-06-07 08:42:38.880488: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory\n",
      "2022-06-07 08:42:38.880525: W tensorflow/stream_executor/cuda/cuda_driver.cc:269] failed call to cuInit: UNKNOWN ERROR (303)\n",
      "2022-06-07 08:42:38.880549: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (2f63633ef0ff): /proc/driver/nvidia/version does not exist\n",
      "2022-06-07 08:42:38.880876: I tensorflow/core/platform/cpu_feature_guard.cc:151] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA\n",
      "To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\n",
      "/home/circleci/project/gpflow/experimental/utils.py:42: UserWarning: You're calling gpflow.experimental.check_shapes.checker.ShapeChecker.__init__ which is considered *experimental*. Expect: breaking changes, poor documentation, and bugs.\n",
      "  warn(\n"
     ]
    }
   ],
   "source": [
    "rbf_m = gpflow.models.SVGP(\n",
    "    gpflow.kernels.SquaredExponential(),\n",
    "    gpflow.likelihoods.Bernoulli(),\n",
    "    gpflow.inducing_variables.InducingPoints(X.copy()),\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "64333423",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-07T08:42:38.931987Z",
     "iopub.status.busy": "2022-06-07T08:42:38.931562Z",
     "iopub.status.idle": "2022-06-07T08:42:46.208808Z",
     "shell.execute_reply": "2022-06-07T08:42:46.207746Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-06-07 08:42:45.943626: W tensorflow/python/util/util.cc:368] Sets are not currently considered sequences, but this may change in the future, so consider avoiding using them.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RBF elbo before training: -9.9408e+01\n"
     ]
    }
   ],
   "source": [
    "rbf_training_loss_closure = rbf_m.training_loss_closure(data, compile=True)\n",
    "rbf_elbo = lambda: -rbf_training_loss_closure().numpy()\n",
    "print(\"RBF elbo before training: %.4e\" % rbf_elbo())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "3725f873",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-07T08:42:46.213274Z",
     "iopub.status.busy": "2022-06-07T08:42:46.212791Z",
     "iopub.status.idle": "2022-06-07T08:42:47.660923Z",
     "shell.execute_reply": "2022-06-07T08:42:47.660086Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RUNNING THE L-BFGS-B CODE\n",
      "\n",
      "           * * *\n",
      "\n",
      "Machine precision = 2.220D-16\n",
      " N =         5152     M =           10\n",
      "\n",
      "At X0         0 variables are exactly at the bounds\n",
      "\n",
      "At iterate    0    f=  9.94077D+01    |proj g|=  1.77693D+01\n",
      "\n",
      "At iterate    1    f=  8.27056D+01    |proj g|=  1.08235D+01\n",
      "\n",
      "At iterate    2    f=  7.10286D+01    |proj g|=  2.52642D+00\n",
      "\n",
      "At iterate    3    f=  6.96128D+01    |proj g|=  9.52086D-01\n",
      "\n",
      "At iterate    4    f=  6.91601D+01    |proj g|=  2.98596D-01\n",
      "\n",
      "At iterate    5    f=  6.90683D+01    |proj g|=  4.57667D-01\n",
      "\n",
      "At iterate    6    f=  6.87999D+01    |proj g|=  8.48569D-01\n",
      "\n",
      "At iterate    7    f=  6.87526D+01    |proj g|=  1.00002D+00\n",
      "\n",
      "At iterate    8    f=  6.85857D+01    |proj g|=  1.28576D+00\n",
      "\n",
      "At iterate    9    f=  6.81708D+01    |proj g|=  2.04265D+00\n",
      "\n",
      "At iterate   10    f=  6.58595D+01    |proj g|=  1.34225D+00\n",
      "\n",
      "At iterate   11    f=  6.47617D+01    |proj g|=  9.21923D-01\n",
      "\n",
      "At iterate   12    f=  6.37115D+01    |proj g|=  7.98398D-01\n",
      "\n",
      "At iterate   13    f=  6.31593D+01    |proj g|=  3.96800D-01\n",
      "\n",
      "At iterate   14    f=  6.23801D+01    |proj g|=  1.27642D+00\n",
      "\n",
      "At iterate   15    f=  6.17198D+01    |proj g|=  7.71734D-01\n",
      "\n",
      "At iterate   16    f=  6.13083D+01    |proj g|=  6.72739D-01\n",
      "\n",
      "At iterate   17    f=  6.09537D+01    |proj g|=  4.45487D-01\n",
      "\n",
      "At iterate   18    f=  6.07507D+01    |proj g|=  5.04335D-01\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " This problem is unconstrained.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   19    f=  6.06242D+01    |proj g|=  1.80232D-01\n",
      "\n",
      "At iterate   20    f=  6.04829D+01    |proj g|=  1.79481D-01\n",
      "\n",
      "At iterate   21    f=  6.04182D+01    |proj g|=  1.66211D-01\n",
      "\n",
      "At iterate   22    f=  6.04028D+01    |proj g|=  1.52839D-01\n",
      "\n",
      "At iterate   23    f=  6.03795D+01    |proj g|=  4.28437D-02\n",
      "\n",
      "At iterate   24    f=  6.03764D+01    |proj g|=  4.87340D-02\n",
      "\n",
      "At iterate   25    f=  6.03741D+01    |proj g|=  3.66168D-02\n",
      "\n",
      "At iterate   26    f=  6.03735D+01    |proj g|=  1.01438D-01\n",
      "\n",
      "At iterate   27    f=  6.03723D+01    |proj g|=  3.97105D-02\n",
      "\n",
      "At iterate   28    f=  6.03721D+01    |proj g|=  1.89009D-02\n",
      "\n",
      "At iterate   29    f=  6.03719D+01    |proj g|=  1.17457D-02\n",
      "\n",
      "At iterate   30    f=  6.03716D+01    |proj g|=  1.04475D-02\n",
      "\n",
      "At iterate   31    f=  6.03716D+01    |proj g|=  1.80645D-02\n",
      "\n",
      "At iterate   32    f=  6.03714D+01    |proj g|=  2.73618D-03\n",
      "\n",
      "At iterate   33    f=  6.03714D+01    |proj g|=  2.05487D-03\n",
      "\n",
      "At iterate   34    f=  6.03714D+01    |proj g|=  2.28429D-03\n",
      "\n",
      "At iterate   35    f=  6.03714D+01    |proj g|=  2.56206D-03\n",
      "\n",
      "At iterate   36    f=  6.03714D+01    |proj g|=  8.80378D-04\n",
      "\n",
      "At iterate   37    f=  6.03714D+01    |proj g|=  3.83350D-04\n",
      "\n",
      "At iterate   38    f=  6.03714D+01    |proj g|=  3.14405D-04\n",
      "\n",
      "At iterate   39    f=  6.03714D+01    |proj g|=  2.42994D-04\n",
      "\n",
      "At iterate   40    f=  6.03714D+01    |proj g|=  5.85343D-04\n",
      "\n",
      "           * * *\n",
      "\n",
      "Tit   = total number of iterations\n",
      "Tnf   = total number of function evaluations\n",
      "Tnint = total number of segments explored during Cauchy searches\n",
      "Skip  = number of BFGS updates skipped\n",
      "Nact  = number of active bounds at final generalized Cauchy point\n",
      "Projg = norm of the final projected gradient\n",
      "F     = final function value\n",
      "\n",
      "           * * *\n",
      "\n",
      "   N    Tit     Tnf  Tnint  Skip  Nact     Projg        F\n",
      " 5152     40     48      1     0     0   5.853D-04   6.037D+01\n",
      "  F =   60.371382131218276     \n",
      "\n",
      "CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH             \n",
      "33.613 iter/s\n"
     ]
    }
   ],
   "source": [
    "set_trainable(rbf_m.inducing_variable, False)\n",
    "start_time = time.time()\n",
    "res = gpflow.optimizers.Scipy().minimize(\n",
    "    rbf_training_loss_closure,\n",
    "    variables=rbf_m.trainable_variables,\n",
    "    method=\"l-bfgs-b\",\n",
    "    options={\"disp\": True, \"maxiter\": MAXITER},\n",
    ")\n",
    "print(f\"{res.nfev / (time.time() - start_time):.3f} iter/s\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "3ae1c13a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-07T08:42:47.664272Z",
     "iopub.status.busy": "2022-06-07T08:42:47.663813Z",
     "iopub.status.idle": "2022-06-07T08:42:47.760534Z",
     "shell.execute_reply": "2022-06-07T08:42:47.759664Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train acc: 100.0%\n",
      "Test acc : 68.33333333333333%\n",
      "RBF elbo after training: -6.0371e+01\n"
     ]
    }
   ],
   "source": [
    "train_acc = np.mean((rbf_m.predict_y(X)[0] > 0.5).numpy().astype(\"float\") == Y)\n",
    "test_acc = np.mean((rbf_m.predict_y(Xt)[0] > 0.5).numpy().astype(\"float\") == Yt)\n",
    "print(f\"Train acc: {train_acc * 100}%\\nTest acc : {test_acc*100}%\")\n",
    "print(\"RBF elbo after training: %.4e\" % rbf_elbo())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a56d8bcf",
   "metadata": {},
   "source": [
    "## Convolutional kernel"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "20f72132",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-07T08:42:47.764057Z",
     "iopub.status.busy": "2022-06-07T08:42:47.763565Z",
     "iopub.status.idle": "2022-06-07T08:42:47.909678Z",
     "shell.execute_reply": "2022-06-07T08:42:47.908578Z"
    }
   },
   "outputs": [],
   "source": [
    "f64 = lambda x: np.array(x, dtype=np.float64)\n",
    "positive_with_min = lambda: affine_scalar_bijector(shift=f64(1e-4))(tfp.bijectors.Softplus())\n",
    "constrained = lambda: affine_scalar_bijector(shift=f64(1e-4), scale=f64(100.0))(\n",
    "    tfp.bijectors.Sigmoid()\n",
    ")\n",
    "max_abs_1 = lambda: affine_scalar_bijector(shift=f64(-2.0), scale=f64(4.0))(tfp.bijectors.Sigmoid())\n",
    "\n",
    "patch_shape = [3, 3]\n",
    "conv_k = gpflow.kernels.Convolutional(gpflow.kernels.SquaredExponential(), IMAGE_SHAPE, patch_shape)\n",
    "conv_k.base_kernel.lengthscales = gpflow.Parameter(1.0, transform=positive_with_min())\n",
    "# Weight scale and variance are non-identifiable. We also need to prevent variance from shooting off crazily.\n",
    "conv_k.base_kernel.variance = gpflow.Parameter(1.0, transform=constrained())\n",
    "conv_k.weights = gpflow.Parameter(conv_k.weights.numpy(), transform=max_abs_1())\n",
    "conv_f = gpflow.inducing_variables.InducingPatches(\n",
    "    np.unique(conv_k.get_patches(X).numpy().reshape(-1, 9), axis=0)\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "7c2860c6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-07T08:42:47.941652Z",
     "iopub.status.busy": "2022-06-07T08:42:47.941276Z",
     "iopub.status.idle": "2022-06-07T08:42:47.956825Z",
     "shell.execute_reply": "2022-06-07T08:42:47.956138Z"
    }
   },
   "outputs": [],
   "source": [
    "conv_m = gpflow.models.SVGP(conv_k, gpflow.likelihoods.Bernoulli(), conv_f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "25fdb050",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-07T08:42:47.959875Z",
     "iopub.status.busy": "2022-06-07T08:42:47.959500Z",
     "iopub.status.idle": "2022-06-07T08:42:47.977397Z",
     "shell.execute_reply": "2022-06-07T08:42:47.976325Z"
    }
   },
   "outputs": [],
   "source": [
    "set_trainable(conv_m.inducing_variable, False)\n",
    "set_trainable(conv_m.kernel.base_kernel.variance, False)\n",
    "set_trainable(conv_m.kernel.weights, False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "0db1c099",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-07T08:42:47.981943Z",
     "iopub.status.busy": "2022-06-07T08:42:47.981610Z",
     "iopub.status.idle": "2022-06-07T08:42:49.331683Z",
     "shell.execute_reply": "2022-06-07T08:42:49.330904Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "conv elbo before training: -8.7271e+01\n"
     ]
    }
   ],
   "source": [
    "conv_training_loss_closure = conv_m.training_loss_closure(data, compile=True)\n",
    "conv_elbo = lambda: -conv_training_loss_closure().numpy()\n",
    "print(\"conv elbo before training: %.4e\" % conv_elbo())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "16908071",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-07T08:42:49.334779Z",
     "iopub.status.busy": "2022-06-07T08:42:49.334469Z",
     "iopub.status.idle": "2022-06-07T08:42:51.316084Z",
     "shell.execute_reply": "2022-06-07T08:42:51.315372Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RUNNING THE L-BFGS-B CODE\n",
      "\n",
      "           * * *\n",
      "\n",
      "Machine precision = 2.220D-16\n",
      " N =         1081     M =           10\n",
      "\n",
      "At X0         0 variables are exactly at the bounds\n",
      "\n",
      "At iterate    0    f=  8.72706D+01    |proj g|=  3.34786D+01\n",
      "\n",
      "At iterate    1    f=  7.06198D+01    |proj g|=  1.23134D+01\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " This problem is unconstrained.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate    2    f=  7.03607D+01    |proj g|=  6.56137D+00\n",
      "\n",
      "At iterate    3    f=  6.98680D+01    |proj g|=  2.96447D+00\n",
      "\n",
      "At iterate    4    f=  6.93739D+01    |proj g|=  2.88465D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate    5    f=  6.88717D+01    |proj g|=  5.27202D+00\n",
      "\n",
      "At iterate    6    f=  6.60134D+01    |proj g|=  1.11323D+01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate    7    f=  6.51602D+01    |proj g|=  3.43289D+00\n",
      "\n",
      "At iterate    8    f=  6.49795D+01    |proj g|=  9.75563D-01\n",
      "\n",
      "At iterate    9    f=  6.48808D+01    |proj g|=  9.60694D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   10    f=  6.48453D+01    |proj g|=  1.39257D+00\n",
      "\n",
      "           * * *\n",
      "\n",
      "Tit   = total number of iterations\n",
      "Tnf   = total number of function evaluations\n",
      "Tnint = total number of segments explored during Cauchy searches\n",
      "Skip  = number of BFGS updates skipped\n",
      "Nact  = number of active bounds at final generalized Cauchy point\n",
      "Projg = norm of the final projected gradient\n",
      "F     = final function value\n",
      "\n",
      "           * * *\n",
      "\n",
      "   N    Tit     Tnf  Tnint  Skip  Nact     Projg        F\n",
      " 1081     10     11      1     0     0   1.393D+00   6.485D+01\n",
      "  F =   64.845328136876148     \n",
      "\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT                 \n",
      "5.562 iter/s\n"
     ]
    }
   ],
   "source": [
    "start_time = time.time()\n",
    "res = gpflow.optimizers.Scipy().minimize(\n",
    "    conv_training_loss_closure,\n",
    "    variables=conv_m.trainable_variables,\n",
    "    method=\"l-bfgs-b\",\n",
    "    options={\"disp\": True, \"maxiter\": MAXITER / 10},\n",
    ")\n",
    "print(f\"{res.nfev / (time.time() - start_time):.3f} iter/s\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "4d4cf6f1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-07T08:42:51.319646Z",
     "iopub.status.busy": "2022-06-07T08:42:51.319238Z",
     "iopub.status.idle": "2022-06-07T08:43:05.309809Z",
     "shell.execute_reply": "2022-06-07T08:43:05.308610Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " This problem is unconstrained.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RUNNING THE L-BFGS-B CODE\n",
      "\n",
      "           * * *\n",
      "\n",
      "Machine precision = 2.220D-16\n",
      " N =         1082     M =           10\n",
      "\n",
      "At X0         0 variables are exactly at the bounds\n",
      "\n",
      "At iterate    0    f=  6.48453D+01    |proj g|=  3.53996D+00\n",
      "\n",
      "At iterate    1    f=  6.24919D+01    |proj g|=  7.35357D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate    2    f=  6.23531D+01    |proj g|=  7.58264D+00\n",
      "\n",
      "At iterate    3    f=  6.04166D+01    |proj g|=  1.58157D+01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate    4    f=  5.88887D+01    |proj g|=  2.48005D+01\n",
      "\n",
      "At iterate    5    f=  5.63927D+01    |proj g|=  4.28536D+01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate    6    f=  5.02144D+01    |proj g|=  1.04313D+02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate    7    f=  4.44685D+01    |proj g|=  8.74280D+01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate    8    f=  3.92359D+01    |proj g|=  3.11481D+01\n",
      "\n",
      "At iterate    9    f=  3.74686D+01    |proj g|=  3.06073D+01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   10    f=  3.68864D+01    |proj g|=  4.40037D+01\n",
      "\n",
      "At iterate   11    f=  3.60668D+01    |proj g|=  7.87412D+00\n",
      "\n",
      "At iterate   12    f=  3.58935D+01    |proj g|=  1.41535D+01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   13    f=  3.45651D+01    |proj g|=  7.04865D+01\n",
      "\n",
      "At iterate   14    f=  3.13752D+01    |proj g|=  4.56939D+01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   15    f=  3.02012D+01    |proj g|=  2.86627D+01\n",
      "\n",
      "At iterate   16    f=  2.96655D+01    |proj g|=  1.60272D+01\n",
      "\n",
      "At iterate   17    f=  2.94558D+01    |proj g|=  8.24031D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   18    f=  2.93105D+01    |proj g|=  2.25261D+00\n",
      "\n",
      "At iterate   19    f=  2.90992D+01    |proj g|=  5.73397D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   20    f=  2.87163D+01    |proj g|=  1.55953D+01\n",
      "\n",
      "At iterate   21    f=  2.81823D+01    |proj g|=  2.54265D+01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   22    f=  2.80343D+01    |proj g|=  2.19902D+01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   23    f=  2.79432D+01    |proj g|=  1.41609D+01\n",
      "\n",
      "At iterate   24    f=  2.78263D+01    |proj g|=  2.44911D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   25    f=  2.78000D+01    |proj g|=  1.18706D+00\n",
      "\n",
      "At iterate   26    f=  2.77623D+01    |proj g|=  3.27247D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   27    f=  2.76356D+01    |proj g|=  5.23204D+00\n",
      "\n",
      "At iterate   28    f=  2.74130D+01    |proj g|=  6.84226D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   29    f=  2.72099D+01    |proj g|=  2.39793D+00\n",
      "\n",
      "At iterate   30    f=  2.71505D+01    |proj g|=  8.87291D-01\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "At iterate   31    f=  2.71225D+01    |proj g|=  1.25368D+00\n",
      "\n",
      "At iterate   32    f=  2.70691D+01    |proj g|=  3.44551D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   33    f=  2.70246D+01    |proj g|=  3.99899D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   34    f=  2.70165D+01    |proj g|=  1.66840D+00\n",
      "\n",
      "At iterate   35    f=  2.69736D+01    |proj g|=  1.96735D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   36    f=  2.69568D+01    |proj g|=  4.38151D+00\n",
      "\n",
      "At iterate   37    f=  2.69408D+01    |proj g|=  1.61116D+00\n",
      "\n",
      "At iterate   38    f=  2.69308D+01    |proj g|=  1.04302D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   39    f=  2.68977D+01    |proj g|=  1.50422D+00\n",
      "\n",
      "At iterate   40    f=  2.68704D+01    |proj g|=  2.03393D+00\n",
      "\n",
      "At iterate   41    f=  2.68478D+01    |proj g|=  7.74728D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   42    f=  2.68370D+01    |proj g|=  6.68973D-01\n",
      "\n",
      "At iterate   43    f=  2.68312D+01    |proj g|=  1.17495D+00\n",
      "\n",
      "At iterate   44    f=  2.68205D+01    |proj g|=  1.40366D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   45    f=  2.68164D+01    |proj g|=  2.93858D+00\n",
      "\n",
      "At iterate   46    f=  2.68066D+01    |proj g|=  1.14149D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   47    f=  2.68038D+01    |proj g|=  2.29234D-01\n",
      "\n",
      "At iterate   48    f=  2.68031D+01    |proj g|=  6.60556D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   49    f=  2.68025D+01    |proj g|=  6.92349D-01\n",
      "\n",
      "At iterate   50    f=  2.68010D+01    |proj g|=  7.83832D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   51    f=  2.67992D+01    |proj g|=  2.75345D+00\n",
      "\n",
      "At iterate   52    f=  2.67965D+01    |proj g|=  1.09876D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   53    f=  2.67954D+01    |proj g|=  1.38049D-01\n",
      "\n",
      "At iterate   54    f=  2.67951D+01    |proj g|=  1.82734D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   55    f=  2.67943D+01    |proj g|=  2.35909D-01\n",
      "\n",
      "At iterate   56    f=  2.67915D+01    |proj g|=  1.36155D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   57    f=  2.67888D+01    |proj g|=  1.44441D+00\n",
      "\n",
      "At iterate   58    f=  2.67867D+01    |proj g|=  6.69361D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   59    f=  2.67852D+01    |proj g|=  2.49328D-01\n",
      "\n",
      "At iterate   60    f=  2.67849D+01    |proj g|=  1.30080D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   61    f=  2.67838D+01    |proj g|=  3.45720D-01\n",
      "\n",
      "At iterate   62    f=  2.67818D+01    |proj g|=  7.66960D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   63    f=  2.67784D+01    |proj g|=  9.00951D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   64    f=  2.67780D+01    |proj g|=  1.20365D+00\n",
      "\n",
      "At iterate   65    f=  2.67748D+01    |proj g|=  8.04737D-01\n",
      "\n",
      "At iterate   66    f=  2.67725D+01    |proj g|=  9.50914D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   67    f=  2.67716D+01    |proj g|=  2.91533D-01\n",
      "\n",
      "At iterate   68    f=  2.67709D+01    |proj g|=  2.11284D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   69    f=  2.67707D+01    |proj g|=  7.81899D-01\n",
      "\n",
      "At iterate   70    f=  2.67699D+01    |proj g|=  4.71172D-01\n",
      "\n",
      "At iterate   71    f=  2.67687D+01    |proj g|=  7.77922D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   72    f=  2.67676D+01    |proj g|=  3.15642D-01\n",
      "\n",
      "At iterate   73    f=  2.67667D+01    |proj g|=  4.34826D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   74    f=  2.67662D+01    |proj g|=  8.68346D-01\n",
      "\n",
      "At iterate   75    f=  2.67653D+01    |proj g|=  1.22761D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   76    f=  2.67642D+01    |proj g|=  5.35418D-01\n",
      "\n",
      "At iterate   77    f=  2.67634D+01    |proj g|=  4.99054D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   78    f=  2.67632D+01    |proj g|=  1.29662D-01\n",
      "\n",
      "At iterate   79    f=  2.67626D+01    |proj g|=  1.94508D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   80    f=  2.67625D+01    |proj g|=  5.88695D-01\n",
      "\n",
      "At iterate   81    f=  2.67616D+01    |proj g|=  3.65856D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   82    f=  2.67614D+01    |proj g|=  3.02147D-01\n",
      "\n",
      "At iterate   83    f=  2.67611D+01    |proj g|=  1.93515D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   84    f=  2.67607D+01    |proj g|=  1.59691D-01\n",
      "\n",
      "At iterate   85    f=  2.67587D+01    |proj g|=  1.00310D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   86    f=  2.67585D+01    |proj g|=  5.74819D-01\n",
      "\n",
      "At iterate   87    f=  2.67576D+01    |proj g|=  3.45734D-01\n",
      "\n",
      "At iterate   88    f=  2.67569D+01    |proj g|=  3.97831D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   89    f=  2.67565D+01    |proj g|=  1.99034D-01\n",
      "\n",
      "At iterate   90    f=  2.67561D+01    |proj g|=  1.41983D-01\n",
      "\n",
      "At iterate   91    f=  2.67556D+01    |proj g|=  1.60806D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   92    f=  2.67554D+01    |proj g|=  9.41866D-01\n",
      "\n",
      "At iterate   93    f=  2.67549D+01    |proj g|=  2.74195D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   94    f=  2.67546D+01    |proj g|=  1.29183D-01\n",
      "\n",
      "At iterate   95    f=  2.67544D+01    |proj g|=  2.30971D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   96    f=  2.67542D+01    |proj g|=  2.83451D-01\n",
      "\n",
      "At iterate   97    f=  2.67537D+01    |proj g|=  6.83473D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   98    f=  2.67532D+01    |proj g|=  8.01556D-02\n",
      "\n",
      "At iterate   99    f=  2.67529D+01    |proj g|=  1.23590D-01\n",
      "\n",
      "At iterate  100    f=  2.67525D+01    |proj g|=  6.68318D-01\n",
      "\n",
      "           * * *\n",
      "\n",
      "Tit   = total number of iterations\n",
      "Tnf   = total number of function evaluations\n",
      "Tnint = total number of segments explored during Cauchy searches\n",
      "Skip  = number of BFGS updates skipped\n",
      "Nact  = number of active bounds at final generalized Cauchy point\n",
      "Projg = norm of the final projected gradient\n",
      "F     = final function value\n",
      "\n",
      "           * * *\n",
      "\n",
      "   N    Tit     Tnf  Tnint  Skip  Nact     Projg        F\n",
      " 1082    100    113      1     0     0   6.683D-01   2.675D+01\n",
      "  F =   26.752476277148411     \n",
      "\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT                 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train acc: 100.0%\n",
      "Test acc : 97.0%\n",
      "conv elbo after training: -2.6752e+01\n"
     ]
    }
   ],
   "source": [
    "set_trainable(conv_m.kernel.base_kernel.variance, True)\n",
    "res = gpflow.optimizers.Scipy().minimize(\n",
    "    conv_training_loss_closure,\n",
    "    variables=conv_m.trainable_variables,\n",
    "    method=\"l-bfgs-b\",\n",
    "    options={\"disp\": True, \"maxiter\": MAXITER},\n",
    ")\n",
    "train_acc = np.mean((conv_m.predict_y(X)[0] > 0.5).numpy().astype(\"float\") == Y)\n",
    "test_acc = np.mean((conv_m.predict_y(Xt)[0] > 0.5).numpy().astype(\"float\") == Yt)\n",
    "print(f\"Train acc: {train_acc * 100}%\\nTest acc : {test_acc*100}%\")\n",
    "print(\"conv elbo after training: %.4e\" % conv_elbo())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "868514ff",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-07T08:43:05.313694Z",
     "iopub.status.busy": "2022-06-07T08:43:05.313251Z",
     "iopub.status.idle": "2022-06-07T08:43:19.809910Z",
     "shell.execute_reply": "2022-06-07T08:43:19.808850Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " This problem is unconstrained.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RUNNING THE L-BFGS-B CODE\n",
      "\n",
      "           * * *\n",
      "\n",
      "Machine precision = 2.220D-16\n",
      " N =         1082     M =           10\n",
      "\n",
      "At X0         0 variables are exactly at the bounds\n",
      "\n",
      "At iterate    0    f=  2.67525D+01    |proj g|=  6.68318D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate    1    f=  2.67522D+01    |proj g|=  3.27002D-01\n",
      "\n",
      "At iterate    2    f=  2.67522D+01    |proj g|=  3.31661D-02\n",
      "\n",
      "At iterate    3    f=  2.67521D+01    |proj g|=  6.80577D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate    4    f=  2.67520D+01    |proj g|=  3.95929D-01\n",
      "\n",
      "At iterate    5    f=  2.67518D+01    |proj g|=  6.57866D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate    6    f=  2.67514D+01    |proj g|=  7.21012D-01\n",
      "\n",
      "At iterate    7    f=  2.67511D+01    |proj g|=  6.49715D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate    8    f=  2.67507D+01    |proj g|=  1.08979D-01\n",
      "\n",
      "At iterate    9    f=  2.67505D+01    |proj g|=  2.88004D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   10    f=  2.67503D+01    |proj g|=  5.68242D-01\n",
      "\n",
      "At iterate   11    f=  2.67501D+01    |proj g|=  5.87606D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   12    f=  2.67496D+01    |proj g|=  2.55465D-01\n",
      "\n",
      "At iterate   13    f=  2.67493D+01    |proj g|=  2.47611D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   14    f=  2.67492D+01    |proj g|=  4.35793D-01\n",
      "\n",
      "At iterate   15    f=  2.67489D+01    |proj g|=  5.27562D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   16    f=  2.67487D+01    |proj g|=  1.92907D-01\n",
      "\n",
      "At iterate   17    f=  2.67486D+01    |proj g|=  4.50674D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   18    f=  2.67486D+01    |proj g|=  2.11891D-01\n",
      "\n",
      "At iterate   19    f=  2.67484D+01    |proj g|=  4.25851D-01\n",
      "\n",
      "At iterate   20    f=  2.67483D+01    |proj g|=  4.95829D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   21    f=  2.67482D+01    |proj g|=  5.43455D-01\n",
      "\n",
      "At iterate   22    f=  2.67480D+01    |proj g|=  3.04600D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   23    f=  2.67479D+01    |proj g|=  3.68898D-02\n",
      "\n",
      "At iterate   24    f=  2.67479D+01    |proj g|=  6.15518D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   25    f=  2.67479D+01    |proj g|=  8.95039D-02\n",
      "\n",
      "At iterate   26    f=  2.67479D+01    |proj g|=  1.41212D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   27    f=  2.67478D+01    |proj g|=  5.84156D-02\n",
      "\n",
      "At iterate   28    f=  2.67477D+01    |proj g|=  1.68661D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   29    f=  2.67475D+01    |proj g|=  1.89131D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   30    f=  2.67475D+01    |proj g|=  2.34854D-01\n",
      "\n",
      "At iterate   31    f=  2.67474D+01    |proj g|=  9.16588D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   32    f=  2.67474D+01    |proj g|=  2.90862D-02\n",
      "\n",
      "At iterate   33    f=  2.67474D+01    |proj g|=  3.78140D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   34    f=  2.67473D+01    |proj g|=  1.47481D-01\n",
      "\n",
      "At iterate   35    f=  2.67473D+01    |proj g|=  2.26681D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   36    f=  2.67472D+01    |proj g|=  2.15401D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   37    f=  2.67472D+01    |proj g|=  2.70266D-01\n",
      "\n",
      "At iterate   38    f=  2.67472D+01    |proj g|=  1.24085D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   39    f=  2.67472D+01    |proj g|=  2.66106D-02\n",
      "\n",
      "At iterate   40    f=  2.67472D+01    |proj g|=  4.83632D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   41    f=  2.67472D+01    |proj g|=  6.90195D-02\n",
      "\n",
      "At iterate   42    f=  2.67472D+01    |proj g|=  8.14353D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   43    f=  2.67472D+01    |proj g|=  1.21137D-01\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "At iterate   44    f=  2.67471D+01    |proj g|=  9.34502D-02\n",
      "\n",
      "At iterate   45    f=  2.67471D+01    |proj g|=  4.26762D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   46    f=  2.67471D+01    |proj g|=  4.98395D-02\n",
      "\n",
      "At iterate   47    f=  2.67471D+01    |proj g|=  6.74465D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   48    f=  2.67471D+01    |proj g|=  7.35587D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   49    f=  2.67471D+01    |proj g|=  1.21215D-01\n",
      "\n",
      "At iterate   50    f=  2.67471D+01    |proj g|=  7.21497D-02\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "At iterate   51    f=  2.67471D+01    |proj g|=  2.14279D-02\n",
      "\n",
      "At iterate   52    f=  2.67471D+01    |proj g|=  3.71622D-02\n",
      "\n",
      "At iterate   53    f=  2.67470D+01    |proj g|=  3.20793D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   54    f=  2.67470D+01    |proj g|=  1.60953D-01\n",
      "\n",
      "At iterate   55    f=  2.67470D+01    |proj g|=  3.17055D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   56    f=  2.67470D+01    |proj g|=  5.56109D-02\n",
      "\n",
      "At iterate   57    f=  2.67470D+01    |proj g|=  1.28999D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   58    f=  2.67470D+01    |proj g|=  1.62634D-01\n",
      "\n",
      "At iterate   59    f=  2.67469D+01    |proj g|=  1.61227D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   60    f=  2.67469D+01    |proj g|=  1.78622D-01\n",
      "\n",
      "At iterate   61    f=  2.67469D+01    |proj g|=  7.27710D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   62    f=  2.67469D+01    |proj g|=  2.23603D-02\n",
      "\n",
      "At iterate   63    f=  2.67469D+01    |proj g|=  8.89382D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   64    f=  2.67468D+01    |proj g|=  1.25858D-01\n",
      "\n",
      "At iterate   65    f=  2.67468D+01    |proj g|=  1.22739D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   66    f=  2.67468D+01    |proj g|=  1.27566D-01\n",
      "\n",
      "At iterate   67    f=  2.67467D+01    |proj g|=  6.79658D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   68    f=  2.67467D+01    |proj g|=  8.85150D-02\n",
      "\n",
      "At iterate   69    f=  2.67466D+01    |proj g|=  1.03223D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   70    f=  2.67465D+01    |proj g|=  1.50167D-01\n",
      "\n",
      "At iterate   71    f=  2.67465D+01    |proj g|=  1.29116D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   72    f=  2.67464D+01    |proj g|=  1.69379D-01\n",
      "\n",
      "At iterate   73    f=  2.67463D+01    |proj g|=  6.84585D-02\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "At iterate   74    f=  2.67462D+01    |proj g|=  8.04399D-02\n",
      "\n",
      "At iterate   75    f=  2.67461D+01    |proj g|=  1.96892D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   76    f=  2.67460D+01    |proj g|=  5.93084D-02\n",
      "\n",
      "At iterate   77    f=  2.67458D+01    |proj g|=  1.35104D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   78    f=  2.67456D+01    |proj g|=  1.53596D-01\n",
      "\n",
      "At iterate   79    f=  2.67452D+01    |proj g|=  8.89142D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   80    f=  2.67451D+01    |proj g|=  4.10770D-01\n",
      "\n",
      "At iterate   81    f=  2.67448D+01    |proj g|=  1.72357D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   82    f=  2.67447D+01    |proj g|=  8.90349D-02\n",
      "\n",
      "At iterate   83    f=  2.67446D+01    |proj g|=  1.94874D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   84    f=  2.67444D+01    |proj g|=  2.01792D-01\n",
      "\n",
      "At iterate   85    f=  2.67441D+01    |proj g|=  4.32662D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   86    f=  2.67438D+01    |proj g|=  1.73046D-01\n",
      "\n",
      "At iterate   87    f=  2.67434D+01    |proj g|=  1.68457D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   88    f=  2.67433D+01    |proj g|=  6.37669D-02\n",
      "\n",
      "At iterate   89    f=  2.67431D+01    |proj g|=  4.10139D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   90    f=  2.67426D+01    |proj g|=  3.56666D-01\n",
      "\n",
      "At iterate   91    f=  2.67418D+01    |proj g|=  4.45180D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   92    f=  2.67417D+01    |proj g|=  8.12744D-01\n",
      "\n",
      "At iterate   93    f=  2.67411D+01    |proj g|=  5.98035D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   94    f=  2.67405D+01    |proj g|=  2.28753D-01\n",
      "\n",
      "At iterate   95    f=  2.67403D+01    |proj g|=  6.07015D-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   96    f=  2.67402D+01    |proj g|=  1.35451D-01\n",
      "\n",
      "At iterate   97    f=  2.67401D+01    |proj g|=  5.26272D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   98    f=  2.67398D+01    |proj g|=  3.61718D-01\n",
      "\n",
      "At iterate   99    f=  2.67392D+01    |proj g|=  1.99866D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate  100    f=  2.67388D+01    |proj g|=  3.14256D-01\n",
      "\n",
      "           * * *\n",
      "\n",
      "Tit   = total number of iterations\n",
      "Tnf   = total number of function evaluations\n",
      "Tnint = total number of segments explored during Cauchy searches\n",
      "Skip  = number of BFGS updates skipped\n",
      "Nact  = number of active bounds at final generalized Cauchy point\n",
      "Projg = norm of the final projected gradient\n",
      "F     = final function value\n",
      "\n",
      "           * * *\n",
      "\n",
      "   N    Tit     Tnf  Tnint  Skip  Nact     Projg        F\n",
      " 1082    100    112      1     0     0   3.143D-01   2.674D+01\n",
      "  F =   26.738761345353041     \n",
      "\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT                 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train acc: 100.0%\n",
      "Test acc : 99.0%\n",
      "conv elbo after training: -2.6739e+01\n"
     ]
    }
   ],
   "source": [
    "res = gpflow.optimizers.Scipy().minimize(\n",
    "    conv_training_loss_closure,\n",
    "    variables=conv_m.trainable_variables,\n",
    "    method=\"l-bfgs-b\",\n",
    "    options={\"disp\": True, \"maxiter\": MAXITER},\n",
    ")\n",
    "train_acc = np.mean((conv_m.predict_y(X)[0] > 0.5).numpy().astype(\"float\") == Y)\n",
    "test_acc = np.mean((conv_m.predict_y(Xt)[0] > 0.5).numpy().astype(\"float\") == Yt)\n",
    "print(f\"Train acc: {train_acc * 100}%\\nTest acc : {test_acc*100}%\")\n",
    "print(\"conv elbo after training: %.4e\" % conv_elbo())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "f2dbe97f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-07T08:43:19.813216Z",
     "iopub.status.busy": "2022-06-07T08:43:19.812799Z",
     "iopub.status.idle": "2022-06-07T08:43:37.311989Z",
     "shell.execute_reply": "2022-06-07T08:43:37.311255Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RUNNING THE L-BFGS-B CODE\n",
      "\n",
      "           * * *\n",
      "\n",
      "Machine precision = 2.220D-16\n",
      " N =         1226     M =           10\n",
      "\n",
      "At X0         0 variables are exactly at the bounds\n",
      "\n",
      "At iterate    0    f=  2.67388D+01    |proj g|=  3.16606D-01\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " This problem is unconstrained.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate    1    f=  2.67198D+01    |proj g|=  5.35704D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate    2    f=  2.65476D+01    |proj g|=  8.50611D+00\n",
      "\n",
      "At iterate    3    f=  2.42278D+01    |proj g|=  2.36226D+01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate    4    f=  2.30459D+01    |proj g|=  3.37315D+01\n",
      "\n",
      "At iterate    5    f=  2.23312D+01    |proj g|=  5.38908D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate    6    f=  2.22042D+01    |proj g|=  5.50696D+00\n",
      "\n",
      "At iterate    7    f=  2.18324D+01    |proj g|=  5.77575D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate    8    f=  2.09906D+01    |proj g|=  6.52458D+00\n",
      "\n",
      "At iterate    9    f=  2.01091D+01    |proj g|=  3.34543D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   10    f=  1.95405D+01    |proj g|=  1.98401D+00\n",
      "\n",
      "At iterate   11    f=  1.90199D+01    |proj g|=  1.17356D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   12    f=  1.85327D+01    |proj g|=  9.06774D+00\n",
      "\n",
      "At iterate   13    f=  1.83419D+01    |proj g|=  9.38439D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   14    f=  1.81870D+01    |proj g|=  2.21364D+00\n",
      "\n",
      "At iterate   15    f=  1.81425D+01    |proj g|=  2.30578D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   16    f=  1.81002D+01    |proj g|=  1.40678D+00\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "At iterate   17    f=  1.80287D+01    |proj g|=  7.62623D+00\n",
      "\n",
      "At iterate   18    f=  1.79518D+01    |proj g|=  7.29553D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   19    f=  1.78896D+01    |proj g|=  3.87625D+00\n",
      "\n",
      "At iterate   20    f=  1.78499D+01    |proj g|=  6.94533D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   21    f=  1.78436D+01    |proj g|=  5.31812D-01\n",
      "\n",
      "At iterate   22    f=  1.78170D+01    |proj g|=  1.12749D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   23    f=  1.77653D+01    |proj g|=  2.11881D+00\n",
      "\n",
      "At iterate   24    f=  1.77073D+01    |proj g|=  1.58629D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   25    f=  1.77044D+01    |proj g|=  3.38680D+00\n",
      "\n",
      "At iterate   26    f=  1.76715D+01    |proj g|=  1.27725D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   27    f=  1.76586D+01    |proj g|=  5.15361D-01\n",
      "\n",
      "At iterate   28    f=  1.76455D+01    |proj g|=  9.85674D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   29    f=  1.76410D+01    |proj g|=  1.86225D+00\n",
      "\n",
      "At iterate   30    f=  1.76355D+01    |proj g|=  6.47077D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   31    f=  1.76337D+01    |proj g|=  5.77440D-01\n",
      "\n",
      "At iterate   32    f=  1.76318D+01    |proj g|=  3.11405D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   33    f=  1.76260D+01    |proj g|=  8.33015D-01\n",
      "\n",
      "At iterate   34    f=  1.76145D+01    |proj g|=  1.17071D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   35    f=  1.75961D+01    |proj g|=  1.56094D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   36    f=  1.75859D+01    |proj g|=  2.87217D+00\n",
      "\n",
      "At iterate   37    f=  1.75661D+01    |proj g|=  1.10688D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   38    f=  1.75597D+01    |proj g|=  5.32229D-01\n",
      "\n",
      "At iterate   39    f=  1.75540D+01    |proj g|=  1.61750D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   40    f=  1.75489D+01    |proj g|=  1.10577D+00\n",
      "\n",
      "At iterate   41    f=  1.75432D+01    |proj g|=  4.14753D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   42    f=  1.75388D+01    |proj g|=  2.00931D+00\n",
      "\n",
      "At iterate   43    f=  1.75341D+01    |proj g|=  6.63690D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   44    f=  1.75315D+01    |proj g|=  3.42959D-01\n",
      "\n",
      "At iterate   45    f=  1.75305D+01    |proj g|=  3.40188D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   46    f=  1.75255D+01    |proj g|=  9.50140D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   47    f=  1.75244D+01    |proj g|=  1.27258D+00\n",
      "\n",
      "At iterate   48    f=  1.75220D+01    |proj g|=  6.29967D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   49    f=  1.75200D+01    |proj g|=  1.48973D-01\n",
      "\n",
      "At iterate   50    f=  1.75189D+01    |proj g|=  5.12409D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   51    f=  1.75162D+01    |proj g|=  1.00840D+00\n",
      "\n",
      "At iterate   52    f=  1.75112D+01    |proj g|=  1.37148D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   53    f=  1.75032D+01    |proj g|=  1.25122D+00\n",
      "\n",
      "At iterate   54    f=  1.74971D+01    |proj g|=  3.02170D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   55    f=  1.74855D+01    |proj g|=  2.47447D-01\n",
      "\n",
      "At iterate   56    f=  1.74801D+01    |proj g|=  2.49745D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   57    f=  1.74698D+01    |proj g|=  5.75337D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   58    f=  1.74609D+01    |proj g|=  2.02369D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   59    f=  1.74576D+01    |proj g|=  6.34100D-01\n",
      "\n",
      "At iterate   60    f=  1.74536D+01    |proj g|=  6.13180D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   61    f=  1.74440D+01    |proj g|=  1.15760D+00\n",
      "\n",
      "At iterate   62    f=  1.74335D+01    |proj g|=  6.30429D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   63    f=  1.74243D+01    |proj g|=  9.07482D-01\n",
      "\n",
      "At iterate   64    f=  1.74176D+01    |proj g|=  2.05518D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   65    f=  1.73966D+01    |proj g|=  9.31738D-01\n",
      "\n",
      "At iterate   66    f=  1.73818D+01    |proj g|=  2.43965D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   67    f=  1.73597D+01    |proj g|=  2.55341D-01\n",
      "\n",
      "At iterate   68    f=  1.73519D+01    |proj g|=  4.12070D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   69    f=  1.73419D+01    |proj g|=  4.82338D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   70    f=  1.73399D+01    |proj g|=  1.27481D+00\n",
      "\n",
      "At iterate   71    f=  1.73346D+01    |proj g|=  5.64209D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   72    f=  1.73316D+01    |proj g|=  3.59697D-01\n",
      "\n",
      "At iterate   73    f=  1.73202D+01    |proj g|=  9.34174D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   74    f=  1.73129D+01    |proj g|=  7.64093D-01\n",
      "\n",
      "At iterate   75    f=  1.73057D+01    |proj g|=  7.10556D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   76    f=  1.72737D+01    |proj g|=  8.91003D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   77    f=  1.72707D+01    |proj g|=  9.01481D-01\n",
      "\n",
      "At iterate   78    f=  1.72580D+01    |proj g|=  3.54078D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   79    f=  1.72472D+01    |proj g|=  3.22970D-01\n",
      "\n",
      "At iterate   80    f=  1.72306D+01    |proj g|=  4.59835D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   81    f=  1.72169D+01    |proj g|=  1.63498D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   82    f=  1.72115D+01    |proj g|=  1.11399D+00\n",
      "\n",
      "At iterate   83    f=  1.72052D+01    |proj g|=  5.04271D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   84    f=  1.71981D+01    |proj g|=  2.29634D-01\n",
      "\n",
      "At iterate   85    f=  1.71939D+01    |proj g|=  2.09421D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   86    f=  1.71911D+01    |proj g|=  9.33184D-01\n",
      "\n",
      "At iterate   87    f=  1.71850D+01    |proj g|=  4.73352D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   88    f=  1.71802D+01    |proj g|=  1.03556D+00\n",
      "\n",
      "At iterate   89    f=  1.71767D+01    |proj g|=  5.02440D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   90    f=  1.71733D+01    |proj g|=  4.19461D-01\n",
      "\n",
      "At iterate   91    f=  1.71718D+01    |proj g|=  2.85280D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   92    f=  1.71640D+01    |proj g|=  3.72939D-01\n",
      "\n",
      "At iterate   93    f=  1.71632D+01    |proj g|=  1.40182D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   94    f=  1.71618D+01    |proj g|=  2.05326D-01\n",
      "\n",
      "At iterate   95    f=  1.71604D+01    |proj g|=  1.49402D+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   96    f=  1.71573D+01    |proj g|=  1.08904D+00\n",
      "\n",
      "At iterate   97    f=  1.71512D+01    |proj g|=  7.39262D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate   98    f=  1.71467D+01    |proj g|=  8.81063D-01\n",
      "\n",
      "At iterate   99    f=  1.71444D+01    |proj g|=  8.02543D-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "At iterate  100    f=  1.71418D+01    |proj g|=  4.07631D-01\n",
      "\n",
      "           * * *\n",
      "\n",
      "Tit   = total number of iterations\n",
      "Tnf   = total number of function evaluations\n",
      "Tnint = total number of segments explored during Cauchy searches\n",
      "Skip  = number of BFGS updates skipped\n",
      "Nact  = number of active bounds at final generalized Cauchy point\n",
      "Projg = norm of the final projected gradient\n",
      "F     = final function value\n",
      "\n",
      "           * * *\n",
      "\n",
      "   N    Tit     Tnf  Tnint  Skip  Nact     Projg        F\n",
      " 1226    100    113      1     0     0   4.076D-01   1.714D+01\n",
      "  F =   17.141761798250375     \n",
      "\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT                 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train acc: 100.0%\n",
      "Test acc : 95.66666666666667%\n",
      "conv elbo after training: -1.7142e+01\n"
     ]
    }
   ],
   "source": [
    "set_trainable(conv_m.kernel.weights, True)\n",
    "res = gpflow.optimizers.Scipy().minimize(\n",
    "    conv_training_loss_closure,\n",
    "    variables=conv_m.trainable_variables,\n",
    "    method=\"l-bfgs-b\",\n",
    "    options={\"disp\": True, \"maxiter\": MAXITER},\n",
    ")\n",
    "train_acc = np.mean((conv_m.predict_y(X)[0] > 0.5).numpy().astype(\"float\") == Y)\n",
    "test_acc = np.mean((conv_m.predict_y(Xt)[0] > 0.5).numpy().astype(\"float\") == Yt)\n",
    "print(f\"Train acc: {train_acc * 100}%\\nTest acc : {test_acc*100}%\")\n",
    "print(\"conv elbo after training: %.4e\" % conv_elbo())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "d06c948d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-07T08:43:37.315111Z",
     "iopub.status.busy": "2022-06-07T08:43:37.314721Z",
     "iopub.status.idle": "2022-06-07T08:43:37.328559Z",
     "shell.execute_reply": "2022-06-07T08:43:37.327956Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead>\n",
       "<tr><th>name                    </th><th>class    </th><th>transform     </th><th>prior  </th><th>trainable  </th><th>shape        </th><th>dtype  </th><th>value                                               </th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "<tr><td>SVGP.kernel.variance    </td><td>Parameter</td><td>Softplus      </td><td>       </td><td>True       </td><td>()           </td><td>float64</td><td>3.5665517693007325                                  </td></tr>\n",
       "<tr><td>SVGP.kernel.lengthscales</td><td>Parameter</td><td>Softplus      </td><td>       </td><td>True       </td><td>()           </td><td>float64</td><td>2.7512917930392673                                  </td></tr>\n",
       "<tr><td>SVGP.inducing_variable.Z</td><td>Parameter</td><td>Identity      </td><td>       </td><td>False      </td><td>(100, 196)   </td><td>float64</td><td>[[0., 0., 0....                                     </td></tr>\n",
       "<tr><td>SVGP.q_mu               </td><td>Parameter</td><td>Identity      </td><td>       </td><td>True       </td><td>(100, 1)     </td><td>float64</td><td>[[-5.78241751e-01...                                </td></tr>\n",
       "<tr><td>SVGP.q_sqrt             </td><td>Parameter</td><td>FillTriangular</td><td>       </td><td>True       </td><td>(1, 100, 100)</td><td>float64</td><td>[[[6.44747990e-01, 0.00000000e+00, 0.00000000e+00...</td></tr>\n",
       "</tbody>\n",
       "</table>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "gpflow.utilities.print_summary(rbf_m)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "96db275a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-07T08:43:37.331121Z",
     "iopub.status.busy": "2022-06-07T08:43:37.330836Z",
     "iopub.status.idle": "2022-06-07T08:43:37.357158Z",
     "shell.execute_reply": "2022-06-07T08:43:37.356542Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead>\n",
       "<tr><th>name                                </th><th>class    </th><th>transform       </th><th>prior  </th><th>trainable  </th><th>shape      </th><th>dtype  </th><th>value                                             </th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "<tr><td>SVGP.kernel.base_kernel.variance    </td><td>Parameter</td><td>Sigmoid + Chain </td><td>       </td><td>True       </td><td>()         </td><td>float64</td><td>99.96483476475984                                 </td></tr>\n",
       "<tr><td>SVGP.kernel.base_kernel.lengthscales</td><td>Parameter</td><td>Softplus + Chain</td><td>       </td><td>True       </td><td>()         </td><td>float64</td><td>0.6318083529666758                                </td></tr>\n",
       "<tr><td>SVGP.kernel.weights                 </td><td>Parameter</td><td>Sigmoid + Chain </td><td>       </td><td>True       </td><td>(144,)     </td><td>float64</td><td>[2.60754232e-01, 3.78009395e-01, 4.45695491e-01...</td></tr>\n",
       "<tr><td>SVGP.inducing_variable.Z            </td><td>Parameter</td><td>Identity        </td><td>       </td><td>False      </td><td>(45, 9)    </td><td>float64</td><td>[[0., 0., 0....                                   </td></tr>\n",
       "<tr><td>SVGP.q_mu                           </td><td>Parameter</td><td>Identity        </td><td>       </td><td>True       </td><td>(45, 1)    </td><td>float64</td><td>[[0.01217117...                                   </td></tr>\n",
       "<tr><td>SVGP.q_sqrt                         </td><td>Parameter</td><td>FillTriangular  </td><td>       </td><td>True       </td><td>(1, 45, 45)</td><td>float64</td><td>[[[0.07111259, 0., 0....                          </td></tr>\n",
       "</tbody>\n",
       "</table>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "gpflow.utilities.print_summary(conv_m)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c913178b",
   "metadata": {},
   "source": [
    "## Conclusion\n",
    "The convolutional kernel performs much better in this simple task. It demonstrates non-local generalization of the strong assumptions in the kernel."
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,.pct.py:percent"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
